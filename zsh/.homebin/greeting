# https://en.wikipedia.org/wiki/ANSI_escape_code

# echo -e "\e[30mBlack\e[m"
# echo "\033[31mred\033[0m"
# printf "\033[31mred\033[0m\n" all same

# https://github.com/romkatv/powerlevel10k#change-the-color-palette-used-by-your-terminal
# for i in {0..255}; do print -Pn "%K{$i}  %k%F{$i}${(l:3::0:)i}%f " ${${(M)$((i%6)):#3}:+$'\n'}; done

_echoGreeting() {
    COLOR_START="\033[3"
    COLOR_END="\033[0m"
    echo "${COLOR_START}1mWelcome${COLOR_END}, It's ${COLOR_START}6mnew${COLOR_END} ${COLOR_START}5menvironment${COLOR_END}!"

    printf "${COLOR_START}0;47mblack${COLOR_END} "
    printf "${COLOR_START}1mred${COLOR_END} "
    printf "${COLOR_START}2mgreen${COLOR_END} "
    printf "${COLOR_START}3myellow${COLOR_END} "
    printf "${COLOR_START}4mblue${COLOR_END} "
    printf "${COLOR_START}5mmagenta${COLOR_END} "
    printf "${COLOR_START}6mcyan${COLOR_END} "
    printf "${COLOR_START}7mwhite${COLOR_END}\n"

    # SGR (Select Graphic Rendition) parameters
    printf "${COLOR_START}0;46mblack${COLOR_END} " # background
    printf "${COLOR_START}1;1mred${COLOR_END} " # bold
    printf "${COLOR_START}2;2mgreen${COLOR_END} " # dim
    printf "${COLOR_START}3;3myellow${COLOR_END} " # italic
    printf "${COLOR_START}4;4mblue${COLOR_END} " # underline
    printf "${COLOR_START}5;46;28mmagenta${COLOR_END} " # blink
    printf "${COLOR_START}6;9mcyan${COLOR_END} " # strikethrough
    printf "${COLOR_START}7;21mwhite${COLOR_END}\n\n" # double underline
    # FIRST_LINE=$(echo "0;47mblack 1mred 2mgreen 3myellow 4mblue 5mmagenta 6mcyan 7mwhite " | tr " " " ")
    # SECOND_LINE=$(echo "0;46mblack 1;1mred 2;2mgreen 3;3myellow 4;4mblue 5;46;28mmagenta 6;9mcyan 7;21mwhite " | tr " " " ")

    # for current_color in $FIRST_LINE; do printf "${COLOR_START}${current_color}${COLOR_END} "; done
    # printf "\n"
    # for current_color in $SECOND_LINE; do printf "${COLOR_START}${current_color}${COLOR_END} "; done
    # printf "\n\n"
}

_echoGreeting

awk 'BEGIN{
    s="/\\/\\/\\/\\/\\"; s=s s s s s s s s;
    for (colnum = 0; colnum<77; colnum++) {
        r = 255-(colnum*255/76);
        g = (colnum*510/76);
        b = (colnum*255/76);
        if (g>255) g = 510-g;
        printf "\033[48;2;%d;%d;%dm", r,g,b;
        printf "\033[38;2;%d;%d;%dm", 255-r,255-g,255-b;
        printf "%s\033[0m", substr(s,colnum+1,1);
    }
    printf "\n";
}'
